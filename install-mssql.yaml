---
- name: Install MSSQL Server 2019 on CentOS 8
  hosts: db
  become: yes

  vars:
    edition: "Developer"
    db_password: "Vagrant@123"

  handlers:
  - name: restart firewalld
    service:
      name: firewalld
      state: restarted

  tasks:
  - name: Create MSSQL Server 2019 repository
    uri:
      url: https://packages.microsoft.com/config/rhel/8/mssql-server-2019.repo
      dest: /etc/yum.repos.d/mssql-server.repo

  - name: Create mssql-tool repo
    uri:
      url: https://packages.microsoft.com/config/rhel/8/prod.repo
      dest: /etc/yum.repos.d/msprod.repo

  - name: Update CentOS
    yum:
      name: "*"
      state: latest

  - name: Generate /etc/hosts file.
    lineinfile:
      dest: /etc/hosts
      regexp: '.*{{ item }}$'
      line: '{{ hostvars[item].ansible_default_ipv4.address }} {{ item }}'
      state: present
    with_items:
      - '{{ groups["db"] }}'

  - name: Install MSSQL Server 2019
    yum:
      name: mssql-server
      state: latest

  - name: Remove previous versions of mssql-tools, if any
    yum:
      name: 
        - unixODBC-utf16
        - unixODBC-utf16-devel
      state: absent

  - name: Install mssql-tools 
    shell: ACCEPT_EULA=Y yum install mssql-tools unixODBC-devel -y

  - name: Add mssql-tools to .bashrc
    lineinfile:
      dest: "{{ item }}"
      state: present
      line: 'export PATH="$PATH:/opt/mssql-tools/bin"'
    with_items:
      - "/home/vagrant/.bashrc"
      - "/root/.bashrc"

  - name: Stop any existing MSSQL Server
    service:
      name: mssql-server
      state: stopped

  - name: Run MSSQL Server setup script
    shell:
      cmd: MSSQL_PID="{{edition}}" MSSQL_SA_PASSWORD="{{db_password}}" /opt/mssql/bin/mssql-conf -n setup accept-eula
    register: setup_output
    failed_when: "'Setup has completed successfully. SQL Server is now starting.' not in setup_output.stdout"

  - name: Check MSSQL setup output
    debug:
      msg: "{{ setup_output.stdout }}"

  - name: Run version query
    shell:
      cmd: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P Vagrant@123 -Q 'SELECT @@VERSION'
    register: query_output

  - name: Output of query
    debug:
      msg: "{{ query_output.stdout }}"

  - name: Add mssql firewall port
    firewalld:
      zone: public
      port: 1433/tcp
      permanent: true
      state: enabled
    notify: restart firewalld

  - name: Copy T-SQL scripts
    copy:
      src: files/
      dest: /tmp/
      directory_mode: yes

...

